/**
 * Copyright (c) 2009 Sergiy Kovalchuk (serg472@gmail.com) - loadmask
 * Copyright (c) 2012 Pavel Vais (vaispavel@gmail.com) - ajaxpage 
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *  
 * Following code is based on Element.mask() implementation from ExtJS framework (http://extjs.com/)
 * Toto je mix dvou javascriptu - loadmasku a ajaxpage
 * Ajax page se vola pomoci jQuery.showPage(html)
 * tato stranka se rusi tlacitkem escape nebo funkci jQuery.closePage();
 * jako css pouziva background - "#ajaxpage-background" a wrapper obalujici stranku - "#ajaxpage-wrapper"
 */
(function(a) {
	a.fn.mask = function(c, b) {
		a(this).each(function() {
			if (b !== undefined && b > 0) {
				var d = a(this);
				d.data("_mask_timeout", setTimeout(function() {
					a.maskElement(d, c)
				}, b))
			} else {
				a.maskElement(a(this), c)
			}
		})
	};

	a.fn.unmask = function() {
		a(this).each(function() {
			a.unmaskElement(a(this))
		})
	};

	a.fn.isMasked = function() {
		return this.hasClass("masked")
	};

	a.maskElement = function(d, c) {
		if (d.data("_mask_timeout") !== undefined) {
			clearTimeout(d.data("_mask_timeout"));
			d.removeData("_mask_timeout")
		}
		if (d.isMasked()) {
			a.unmaskElement(d)
		}
		if (d.css("position") == "static") {
			d.addClass("masked-relative")
		}
		d.addClass("masked");
		var e = a('<div class="loadmask"></div>');
		if (navigator.userAgent.toLowerCase().indexOf("msie") > -1) {
			e.height(d.height() + parseInt(d.css("padding-top")) + parseInt(d.css("padding-bottom")));
			e.width(d.width() + parseInt(d.css("padding-left")) + parseInt(d.css("padding-right")))
		}
		if (navigator.userAgent.toLowerCase().indexOf("msie 6") > -1) {
			d.find("select").addClass("masked-hidden")
		}
		d.append(e);
		if (c !== undefined) {
			var b = a('<div class="loadmask-msg" style="display:none;"></div>');
			b.append("<div>" + c + "</div>");
			d.append(b);
			b.css("top", Math.round(d.height() / 2 - (b.height() - parseInt(b.css("padding-top")) - parseInt(b.css("padding-bottom"))) / 2) + "px");
			b.css("left", Math.round(d.width() / 2 - (b.width() - parseInt(b.css("padding-left")) - parseInt(b.css("padding-right"))) / 2) + "px");
			b.show()
		}
	};

	a.unmaskElement = function(b) {
		if (b.data("_mask_timeout") !== undefined) {
			clearTimeout(b.data("_mask_timeout"));
			b.removeData("_mask_timeout")
		}
		b.find(".loadmask-msg,.loadmask").remove();
		b.removeClass("masked");
		b.removeClass("masked-relative");
		b.find("select").removeClass("masked-hidden")
	}
})(jQuery);


(function(a) {
	a.fn.showMessage = function(message, element_class,ttl,pos) {
		t = a(this);
		if (element_class === undefined)
			element_class = "error";
		if (ttl === undefined)
			ttl = 3000;
		if (t.find(".showmessage").length > 0)
			return false;
		
		var new_obj = jQuery("<div/>", {
			'class': "showmessage " + element_class,
			html: "<p>" + message + "</p>"
		});
		new_obj.hide();

		t.append(new_obj);
		sm = t.find('.showmessage');

		var position = t.position();
		x = (t.outerWidth() - sm.outerWidth()) / 2;
		y = (t.outerHeight() - sm.outerHeight()) / 2;
		if (t.css('position') !== 'relative' || t.css('position') !== 'absolute')
			t.css({position: 'relative'})
		
		if (pos == "top")
			y = 0;
		
		sm.css({
			position: 'absolute',
			zIndex: 5000,
			top: y,
			left: x
		}).fadeIn(300).delay(ttl).fadeOut(300);


	};
})(jQuery);


jQuery.extend({
	loadPage: function(target_url, loading_message, callback_succesful, callback_error, page_id) {
		$.ajax({
			url: target_url,
			type: "post",
			data: {page_id: page_id},
			beforeSend: function() {
				//t.mask(loading_message, 200);
			},
			success: function(data)
			{
				if (callback_succesful && typeof callback_succesful === 'function') {
					(callback_succesful(jQuery.parseJSON(data)));
				} else {
					data = jQuery.parseJSON(data);
					jQuery.showPage(data.response, data.page_id === undefined ? null : data.page_id);
				}
			},
			error: function(data)
			{
				if (callback_error && typeof callback_error === 'function') {
					(callback_error(data));
				} else {
					//console.log("loadPage error " + target_url + "!");
					//console.log(data);
					//todo?
				}

			},
			complete: function() {
				//t.unmask();
			}
		});

	},
	showPage: function(html_input, id) {

		$(document).keyup(function(e) {
			if (e.which === 27) {
				jQuery.closePage();
			}
		});
		if ($('#ajaxpage-background').length != 0)
		{
			if (id !== undefined)
			{
				if ($('#ajaxpage-background').data("ajaxpageid") == id)
				{
					$('#ajaxpage-background').stop().fadeIn(200, function() {
						$(this).children().slideDown(200);
						goToByScroll('#ajaxpage-wrapper');
					});
					return;
				} else
					jQuery.removePage();
			} else {
				jQuery.removePage();
			}


		}

		var new_obj = jQuery("<div/>", {
			id: "ajaxpage-background",
			html: "<div id='ajaxpage-wrapper'>" + html_input + "</div>"
		});
		new_obj.hide();

		var e = jQuery.Event('keydown', {
			which: $.ui.keyCode.ENTER
		});


		$('input').trigger(e);
		$('body').prepend(new_obj);
		wrapper = $('#ajaxpage-wrapper');
		console.log(wrapper.length);
		if (wrapper.children().data("ajaxclass") !== undefined)
		{
			wrapper.addClass($('#ajaxpage-wrapper').children().data("ajaxclass"));
			//wrapper.find("div:data(ajaxclass)").remove();
		}


		$('#ajaxpage-background').stop().fadeIn(200, function() {
			if (id !== undefined)
				$(this).data("ajaxpageid", id);
			$(this).children().stop().slideDown(200);
			goToByScroll('#ajaxpage-wrapper');
			callback = wrapper.children().data('ajaxOnshowcallback');
			if (callback !== undefined)
				window[callback]();


		})
	},
	closePage: function()
	{
		$('#ajaxpage-wrapper').stop().slideUp(200, function() {
			$(this).parent().hide();
		});
	},
	removePage: function()
	{
		$('#ajaxpage-wrapper').stop().slideUp(200, function() {
			$(this).parent().remove();
		});
	}
});
/*
jQuery.fn.textWidth = function() {
	var org = $(this);
	var text = org.val();
	var html = $('<span style="postion:absolute;width:auto;left:-9999px">' + (text) + '</span>');
	if (!text) {
		html.css("font-family", org.css("font-family"));
		html.css("font-size", org.css("font-size"));
	}
	$('body').append(html);
	var width = html.width();
	html.remove();
	return width;
}*/
